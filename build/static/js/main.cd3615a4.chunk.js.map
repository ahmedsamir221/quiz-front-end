{"version":3,"sources":["Components/CreateQuizFeature/AddQuestion/AddQuestion.js","Components/CreateQuizFeature/AddQuestion/AddQuestionContainer.js","Components/CreateQuizFeature/AddQuestion/AddQuestionModule.js","Components/CreateQuizFeature/Error/Error.js","Components/CreateQuizFeature/Name/Name.js","Components/CreateQuizFeature/Name/NameModule.js","Components/CreateQuizFeature/Name/NameContainer.js","Components/CreateQuizFeature/Answer/Answer.js","Components/CreateQuizFeature/Answer/AnswerContainer.js","Components/CreateQuizFeature/Answer/AnswerModule.js","Components/CreateQuizFeature/AnswerList/AnswerList.js","Components/CreateQuizFeature/Question/Question.js","Components/CreateQuizFeature/Question/QuestionContainer.js","Components/CreateQuizFeature/Question/QuestionModule.js","Components/CreateQuizFeature/QuestionList/QuestionList.js","Components/CreateQuizFeature/QuestionList/QuestionListContainer.js","Components/CreateQuizFeature/Email/Email.js","Components/CreateQuizFeature/Email/EmailContainer.js","Components/CreateQuizFeature/Email/EmailModule.js","Components/CreateQuizFeature/Emails/Emails.js","Components/CreateQuizFeature/Emails/EmailsContainer.js","Components/CreateQuizFeature/AddEmail/AddEmail.js","Components/CreateQuizFeature/AddEmail/AddEmailContainer.js","Components/CreateQuizFeature/AddEmail/AddEmailModule.js","Components/CreateQuizFeature/CreateQuiz/CreateQuiz.js","Components/CreateQuizFeature/CreateQuiz/CreateQuizModule.js","Components/CreateQuizFeature/QuestionList/QuestionListModule.js","Components/CreateQuizFeature/Emails/EmailsModule.js","Components/CreateQuizFeature/CreateQuiz/CreateQuizContainer.js","Components/MyQuizzesFeature/Quiz/Quiz.js","Components/MyQuizzesFeature/Quiz/QuizContainer.js","Components/MyQuizzesFeature/Quiz/QuizModule.js","Components/MyQuizzesFeature/Quizzes/Quizzes.js","Components/TestsFeature/Answer/Answer.js","Components/TestsFeature/Answer/AnswerContainer.js","Components/TestsFeature/Answer/AnswerModule.js","Components/TestsFeature/AnswerList/AnswerList.js","Components/TestsFeature/Question/Question.js","Components/TestsFeature/QuestionList/QuestionList.js","Components/TestsFeature/Test/loading.png","Components/TestsFeature/Test/Test.js","Components/TestsFeature/Test/TestContainer.js","Components/TestsFeature/Test/TestModule.js","Components/TestsFeature/Tests/Tests.js","Components/App/logo2.jpg","Components/App/App.js","Components/App/AppModule.js","Components/TestsFeature/QuestionList/QuestionListModule.js","index.js"],"names":["AddQuestion","addQuestionClickHandler","onClick","className","AddQuestionContainer","connect","dispach","type","Error","value","style","color","fontSize","Name","editToggle","setState","edit","state","input","this","props","name","updateNameClickHandler","ref","n","defaultValue","React","Component","updateName","NameContainer","quiz","Answer","children","i","j","isChecked","updateAnswerClickHandler","deleteAnswerClickHandler","correctAnswerClickHandler","margin","readOnly","checked","AnswerContainer","questions","correctAnswer","updateAnswer","deleteAnswer","AnswerList","map","answer","Question","updateQuestionClickHandler","deleteQuestionClickHandler","AddAnswerClickHandler","question","answers","QuestionContainer","updateQuestion","deleteQuestion","addAnswer","QuestionList","QuestionListContainer","Email","updateEmailClickHandler","deleteEmailClickHandler","EmailContainer","updateEmail","deleteEmail","Emails","emails","email","EmailsContainer","AddEmail","addEmailClickHandler","AddEmailContainer","CreateQuiz","prepare","saveQuizClickHandler","combineReducers","action","slice","undefined","length","CreateQuizContainer","console","log","_id","check","every","isQuizeValid","fetch","method","headers","Authorization","sessionStorage","token","body","JSON","stringify","then","r","text","window","location","href","Quiz","data","url","json","class","QuizContainer","Quizzes","to","path","updateTestClickHandler","test","updateTest","Test","getDegree","degree","src","loading","alt","TestContainer","cnt","fillTest","Tests","App","success","response","tokenId","profileObj","givenName","isLogedIn","failure","active","id","logo","clientId","buttonText","onLogoutSuccess","onSuccess","cookiePolicy","isSignedIn","app","temp","push","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd3615a4.chunk.js","sourcesContent":["import \"./AddQuestion.css\";\r\nconst AddQuestion = ({ addQuestionClickHandler }) => {\r\n  return (\r\n    <button onClick={addQuestionClickHandler} className=\"add-question\">\r\n      {\" \"}\r\n      add question{\" \"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddQuestion;\r\n","import { connect } from \"react-redux\";\r\nimport AddQuestion from \"./AddQuestion\";\r\nimport { addQuestion } from \"./AddQuestionModule\";\r\n\r\nconst mapDispachToProps = (dispach) => {\r\n  return {\r\n    addQuestionClickHandler: () => {\r\n      dispach(addQuestion());\r\n    },\r\n  };\r\n};\r\n\r\nconst AddQuestionContainer = connect(null, mapDispachToProps)(AddQuestion);\r\nexport default AddQuestionContainer;\r\n","export const addQuestion = () => {\r\n  return {\r\n    type: \"addQuestion\",\r\n  };\r\n};\r\n","const Error = ({ value }) => {\r\n  if (value) {\r\n    return <span></span>;\r\n  } else {\r\n    return (\r\n      <span style={{ color: \"#de0000\", fontSize: \"1.3rem\" }}>\r\n        {\" \"}\r\n        This field is required{\" \"}\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Error;\r\n","import Error from \"./../Error/Error\";\r\nimport React from \"react\";\r\nimport \"../Answer/Answer.css\";\r\nimport \"./Name.css\";\r\nclass Name extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      edit: false,\r\n    };\r\n  }\r\n  editToggle = () => {\r\n    this.setState({\r\n      edit: !this.state.edit,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { name, updateNameClickHandler } = this.props;\r\n    let edit = this.state.edit;\r\n    let input;\r\n    if (edit) {\r\n      return (\r\n        <div className=\"question-head-block\">\r\n          <textarea\r\n            className=\"question-name-input\"\r\n            ref={(n) => (input = n)}\r\n            defaultValue={name}\r\n          ></textarea>\r\n          <button\r\n            onClick={() => {\r\n              updateNameClickHandler(input.value);\r\n              this.editToggle();\r\n            }}\r\n            className=\"question-name-save\"\r\n          >\r\n            {\" \"}\r\n            save\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"question-head-block\">\r\n        <div className=\"question-name\">\r\n          Quiz name : {name} <Error value={name} />\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            this.editToggle();\r\n          }}\r\n          className=\"question-name-edit\"\r\n        >\r\n          {\" \"}\r\n          edit{\" \"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nconst Name = ({\r\n    name,\r\n    updateNameClickHandler\r\n}) => {\r\n    let input;\r\n    return (\r\n        <div className=\"head\">\r\n            <span> Quiz name : {name}</span>\r\n            <input ref={ n => input = n}></input>\r\n            <Error value={name}/>\r\n            <button onClick={() => {\r\n                    updateNameClickHandler(input.value);\r\n                    input.value = '';\r\n                }}\r\n            >\r\n                update\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n*/\r\n\r\nexport default Name;\r\n","export const name = (state = \"\", action) => {\r\n  let type = action.type;\r\n  let value = action.value;\r\n  if (type === \"updateName\") {\r\n    return value;\r\n  } else if (type === \"clearName\") {\r\n    return \"\";\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport const updateName = (value) => {\r\n  return {\r\n    type: \"updateName\",\r\n    value,\r\n  };\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport Name from \"./Name\";\r\nimport { updateName } from \"./NameModule\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    name: state.quiz.name,\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = (dispach) => {\r\n  return {\r\n    updateNameClickHandler: (value) => {\r\n      dispach(updateName(value));\r\n    },\r\n  };\r\n};\r\n\r\nconst NameContainer = connect(mapStateToProps, mapDispachToProps)(Name);\r\nexport default NameContainer;\r\n","import Error from \"../Error/Error\";\r\nimport \"./Answer.css\";\r\nimport React from \"react\";\r\n\r\nclass Answer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      edit: false,\r\n    };\r\n  }\r\n  editToggle = () => {\r\n    this.setState({\r\n      edit: !this.state.edit,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      children,\r\n      i,\r\n      j,\r\n      isChecked,\r\n      updateAnswerClickHandler,\r\n      deleteAnswerClickHandler,\r\n      correctAnswerClickHandler,\r\n    } = this.props;\r\n    let edit = this.state.edit;\r\n    let input;\r\n    if (edit) {\r\n      return (\r\n        <li className=\"answer\">\r\n          <textarea\r\n            className=\"answer-input\"\r\n            ref={(n) => (input = n)}\r\n            defaultValue={children}\r\n          ></textarea>\r\n          <button\r\n            onClick={() => {\r\n              updateAnswerClickHandler(i, j, input.value);\r\n              this.editToggle();\r\n            }}\r\n            className=\"answer-save\"\r\n          >\r\n            {\" \"}\r\n            save\r\n          </button>\r\n        </li>\r\n      );\r\n    }\r\n    return (\r\n      <li className=\"answer\">\r\n        <div className=\"answer-top\">\r\n          {\" \"}\r\n          {j + 1} : {children}\r\n          <Error value={children} />\r\n        </div>\r\n        <div className=\"answer-buttons\">\r\n          <input\r\n            style={{ margin: \"1rem\" }}\r\n            onClick={() => correctAnswerClickHandler(i, j)}\r\n            readOnly\r\n            type=\"checkbox\"\r\n            checked={isChecked}\r\n          ></input>\r\n          <button\r\n            onClick={() => {\r\n              this.editToggle();\r\n            }}\r\n            className=\"answer-edit\"\r\n          >\r\n            {\" \"}\r\n            edit{\" \"}\r\n          </button>\r\n          <button\r\n            className=\"answer-delete\"\r\n            onClick={() => deleteAnswerClickHandler(i, j)}\r\n          >\r\n            {\" \"}\r\n            delete{\" \"}\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nconst Answer = ({\r\n    children,\r\n    i,\r\n    j,\r\n    isChecked,\r\n    updateAnswerClickHandler,\r\n    deleteAnswerClickHandler,\r\n    correctAnswerClickHandler\r\n}) => {\r\n    let input;\r\n    return (\r\n        <li >\r\n            <span> {j + 1} : </span>\r\n            <span> {children} </span>\r\n            <input ref={n =>input = n}></input>\r\n            <Error value={children} />\r\n            <input onClick={() => correctAnswerClickHandler(i, j)} readOnly type='checkbox' checked={isChecked}></input>\r\n            <button onClick={() => {\r\n                    updateAnswerClickHandler(i, j, input.value);\r\n                    input.value = ''\r\n                }}\r\n            >\r\n            Update \r\n            </button>\r\n            <button onClick={() => deleteAnswerClickHandler(i, j)} > Delete </button>\r\n        </li>\r\n    )\r\n}\r\n*/\r\nexport default Answer;\r\n","import { connect } from \"react-redux\";\r\nimport Answer from \"./Answer\";\r\nimport { updateAnswer, deleteAnswer, correctAnswer } from \"./AnswerModule\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    isChecked: state.quiz.questions[props.i].correctAnswer === props.j,\r\n  };\r\n};\r\n\r\nconst mapDispachtoProps = (dispach) => {\r\n  return {\r\n    updateAnswerClickHandler: (i, j, value) => {\r\n      dispach(updateAnswer(i, j, value));\r\n    },\r\n    deleteAnswerClickHandler: (i, j) => {\r\n      dispach(deleteAnswer(i, j));\r\n    },\r\n    correctAnswerClickHandler: (i, j) => {\r\n      dispach(correctAnswer(i, j));\r\n    },\r\n  };\r\n};\r\n\r\nconst AnswerContainer = connect(mapStateToProps, mapDispachtoProps)(Answer);\r\n\r\nexport default AnswerContainer;\r\n","export const updateAnswer = (i, j, value) => {\r\n  return {\r\n    type: \"updateAnswer\",\r\n    i,\r\n    j,\r\n    value,\r\n  };\r\n};\r\n\r\nexport const deleteAnswer = (i, j) => {\r\n  return {\r\n    type: \"deleteAnswer\",\r\n    i,\r\n    j,\r\n  };\r\n};\r\n\r\nexport const correctAnswer = (i, j) => {\r\n  return {\r\n    type: \"correctAnswer\",\r\n    i,\r\n    j,\r\n  };\r\n};\r\n","import AnswerContainer from \"../Answer/AnswerContainer\";\r\nimport \"./AnswerList.css\";\r\n\r\nconst AnswerList = ({ children, i }) => {\r\n  return (\r\n    <ul className=\"answer-list\">\r\n      {children.map((answer, j) => {\r\n        return (\r\n          <AnswerContainer key={j} i={i} j={j}>\r\n            {answer}\r\n          </AnswerContainer>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AnswerList;\r\n","import AnswerList from \"./../AnswerList/AnswerList\";\r\nimport Error from \"../Error/Error\";\r\nimport \"./Question.css\";\r\nimport React from \"react\";\r\n\r\nclass Question extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      edit: false,\r\n    };\r\n  }\r\n  editToggle = () => {\r\n    this.setState({\r\n      edit: !this.state.edit,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      i,\r\n      children,\r\n      updateQuestionClickHandler,\r\n      deleteQuestionClickHandler,\r\n      AddAnswerClickHandler,\r\n    } = this.props;\r\n    let edit = this.state.edit;\r\n    let input;\r\n    if (edit) {\r\n      return (\r\n        <li className=\"question\">\r\n          <div className=\"question-top\">\r\n            <textarea\r\n              className=\"question-input\"\r\n              ref={(n) => (input = n)}\r\n              defaultValue={children.question}\r\n            ></textarea>\r\n            <button\r\n              onClick={() => {\r\n                updateQuestionClickHandler(i, input.value);\r\n                this.editToggle();\r\n              }}\r\n              className=\"question-save\"\r\n            >\r\n              {\" \"}\r\n              save\r\n            </button>\r\n          </div>\r\n\r\n          <h1 className=\"answer-list-title\"> Answers </h1>\r\n          <AnswerList i={i}>{children.answers}</AnswerList>\r\n          <button\r\n            className=\"answer-add\"\r\n            onClick={() => AddAnswerClickHandler(i)}\r\n          >\r\n            {\" \"}\r\n            add answer{\" \"}\r\n          </button>\r\n        </li>\r\n      );\r\n    }\r\n    return (\r\n      <li className=\"question\">\r\n        <div className=\"question-top\">\r\n          <div className=\"question-top-val\">\r\n            {\" \"}\r\n            {i + 1} : {children.question}\r\n            <Error value={children.question} />\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                this.editToggle();\r\n              }}\r\n              className=\"question-edit\"\r\n            >\r\n              {\" \"}\r\n              edit{\" \"}\r\n            </button>\r\n            <button\r\n              className=\"question-delete\"\r\n              onClick={() => deleteQuestionClickHandler(i, input?.value)}\r\n            >\r\n              {\" \"}\r\n              delete{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <h1 className=\"answer-list-title\"> Answers </h1>\r\n        <AnswerList i={i}>{children.answers}</AnswerList>\r\n        <button className=\"answer-add\" onClick={() => AddAnswerClickHandler(i)}>\r\n          {\" \"}\r\n          add answer{\" \"}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nconst Question = ({\r\n    i,\r\n    children,\r\n    updateQuestionClickHandler,\r\n    deleteQuestionClickHandler,\r\n    AddAnswerClickHandler,\r\n    edit\r\n}) => {\r\n    let input;\r\n    if(edit) {\r\n        return (\r\n            <li className=\"question\">\r\n            <textarea ref={n => input = n}></textarea>\r\n            <button onClick={() => {\r\n                    updateQuestionClickHandler(i ,input.value);\r\n                    input.value = '';\r\n                }}\r\n                className='save'\r\n            > save\r\n            </button>\r\n            <AnswerList i={i}>{children.answers}</AnswerList>\r\n            <button\r\n             onClick={() => AddAnswerClickHandler(i)}>Add answer</button>\r\n        </li>\r\n        );\r\n    }\r\n    return (\r\n        <li className=\"question\">\r\n            <span> Question {i + 1} : </span>\r\n            <span> {children.question} </span>\r\n            <Error value={children.question} />\r\n            <button onClick={() => {\r\n                    this.editToggle();\r\n                }}\r\n                className='edit'\r\n            >\r\n            </button>\r\n            <button\r\n             className='delete'\r\n             onClick={() => deleteQuestionClickHandler(i ,input.value)}></button>\r\n            <br/>\r\n            <AnswerList i={i}>{children.answers}</AnswerList>\r\n            <button\r\n             onClick={() => AddAnswerClickHandler(i)}>Add answer</button>\r\n        </li>\r\n    )\r\n}\r\n*/\r\n\r\nexport default Question;\r\n","import { connect } from \"react-redux\";\r\nimport Question from \"./Question\";\r\nimport { addAnswer, updateQuestion, deleteQuestion } from \"./QuestionModule\";\r\nconst mapDispachToProps = (dispach) => {\r\n  return {\r\n    updateQuestionClickHandler: (i, value) => {\r\n      dispach(updateQuestion(i, value));\r\n    },\r\n    deleteQuestionClickHandler: (i) => {\r\n      dispach(deleteQuestion(i));\r\n    },\r\n    AddAnswerClickHandler: (i) => {\r\n      dispach(addAnswer(i));\r\n    },\r\n  };\r\n};\r\n\r\nconst QuestionContainer = connect(null, mapDispachToProps)(Question);\r\n\r\nexport default QuestionContainer;\r\n","export const updateQuestion = (i, value) => {\r\n  return {\r\n    type: \"updateQuestion\",\r\n    i,\r\n    value,\r\n  };\r\n};\r\n\r\nexport const deleteQuestion = (i) => {\r\n  return {\r\n    type: \"deleteQuestion\",\r\n    i,\r\n  };\r\n};\r\n\r\nexport const addAnswer = (i) => {\r\n  return {\r\n    type: \"addAnswer\",\r\n    i,\r\n  };\r\n};\r\n","import QuestionContainer from \"../Question/QuestionContainer\";\r\nimport \"./QuestionList.css\";\r\nconst QuestionList = ({ questions }) => {\r\n  //console.log(questions)\r\n  return (\r\n    <ul className=\"list\">\r\n      {questions.map((question, i) => {\r\n        return (\r\n          <QuestionContainer key={i} i={i}>\r\n            {question}\r\n          </QuestionContainer>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","import { connect } from \"react-redux\";\r\nimport QuestionList from \"./QuestionList\";\r\n\r\nconst mapStatetoProps = (state) => {\r\n  return {\r\n    questions: state.quiz.questions,\r\n  };\r\n};\r\n\r\nconst QuestionListContainer = connect(mapStatetoProps)(QuestionList);\r\n\r\nexport default QuestionListContainer;\r\n","import Error from \"./../Error/Error\";\r\nimport React from \"react\";\r\nimport \"../Answer/Answer.css\";\r\nclass Email extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      edit: false,\r\n    };\r\n  }\r\n  editToggle = () => {\r\n    this.setState({\r\n      edit: !this.state.edit,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      children,\r\n      i,\r\n      updateEmailClickHandler,\r\n      deleteEmailClickHandler,\r\n    } = this.props;\r\n    let edit = this.state.edit;\r\n    let input;\r\n    if (edit) {\r\n      return (\r\n        <li className=\"answer\">\r\n          <textarea\r\n            className=\"answer-input\"\r\n            ref={(n) => (input = n)}\r\n            defaultValue={children}\r\n          ></textarea>\r\n          <button\r\n            onClick={() => {\r\n              updateEmailClickHandler(i, input.value);\r\n              this.editToggle();\r\n            }}\r\n            className=\"answer-save\"\r\n          >\r\n            {\" \"}\r\n            save\r\n          </button>\r\n        </li>\r\n      );\r\n    }\r\n    return (\r\n      <li className=\"answer\">\r\n        <div className=\"answer-top\">\r\n          {\" \"}\r\n          {i + 1} : {children}\r\n          <Error value={children} />\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              this.editToggle();\r\n            }}\r\n            className=\"answer-edit\"\r\n          >\r\n            {\" \"}\r\n            edit{\" \"}\r\n          </button>\r\n          <button\r\n            className=\"answer-delete\"\r\n            onClick={() => deleteEmailClickHandler(i)}\r\n          >\r\n            {\" \"}\r\n            delete{\" \"}\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nconst Email = ({\r\n    children,\r\n    i,\r\n    updateEmailClickHandler,\r\n    deleteEmailClickHandler\r\n\r\n}) => {\r\n    let input;\r\n    return (\r\n        <div>\r\n            <span> email {i + 1} : {children}</span>\r\n            <input ref={n => input = n}></input>\r\n            <Error value={children}/>\r\n            <button onClick={() => {\r\n                    updateEmailClickHandler(i, input.value);\r\n                    input.value = '';\r\n                }}\r\n            >\r\n                update \r\n            </button>\r\n            <button onClick={() => deleteEmailClickHandler(i)}> delete </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n*/\r\nexport default Email;\r\n","import { connect } from \"react-redux\";\r\nimport Email from \"./Email\";\r\nimport { updateEmail, deleteEmail } from \"./EmailModule\";\r\n\r\nconst mapDispachToProps = (dispach) => {\r\n  return {\r\n    updateEmailClickHandler: (i, value) => {\r\n      dispach(updateEmail(i, value));\r\n    },\r\n    deleteEmailClickHandler: (i) => {\r\n      dispach(deleteEmail(i));\r\n    },\r\n  };\r\n};\r\n\r\nconst EmailContainer = connect(null, mapDispachToProps)(Email);\r\nexport default EmailContainer;\r\n","export const updateEmail = (i, value) => {\r\n  return {\r\n    type: \"updateEmail\",\r\n    i,\r\n    value,\r\n  };\r\n};\r\n\r\nexport const deleteEmail = (i) => {\r\n  return {\r\n    type: \"deleteEmail\",\r\n    i,\r\n  };\r\n};\r\n","import EmailContainer from \"./../Email/EmailContainer\";\r\nimport \"./Emails.css\";\r\n\r\nconst Emails = ({ emails }) => {\r\n  return (\r\n    <ul className=\"email-list\">\r\n      {emails.map((email, i) => {\r\n        return (\r\n          <EmailContainer key={i} i={i}>\r\n            {email}\r\n          </EmailContainer>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Emails;\r\n","import { connect } from \"react-redux\";\r\nimport Emails from \"./Emails\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    emails: state.quiz.emails,\r\n  };\r\n};\r\n\r\nconst EmailsContainer = connect(mapStateToProps)(Emails);\r\nexport default EmailsContainer;\r\n","import \"../AddQuestion/AddQuestion.css\";\r\nconst AddEmail = ({ addEmailClickHandler }) => {\r\n  return (\r\n    <button className=\"add-question\" onClick={addEmailClickHandler}>\r\n      {\" \"}\r\n      add email{\" \"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddEmail;\r\n","import { connect } from \"react-redux\";\r\nimport AddEmail from \"./AddEmail\";\r\nimport { addEmail } from \"./AddEmailModule\";\r\n\r\nconst mapDispachtoProps = (dispach) => {\r\n  return {\r\n    addEmailClickHandler: () => {\r\n      dispach(addEmail());\r\n    },\r\n  };\r\n};\r\n\r\nconst AddEmailContainer = connect(null, mapDispachtoProps)(AddEmail);\r\nexport default AddEmailContainer;\r\n","export const addEmail = () => {\r\n  return {\r\n    type: \"addEmail\",\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport AddQuestionContainer from \"../AddQuestion/AddQuestionContainer\";\r\nimport NameContainer from \"../Name/NameContainer\";\r\nimport QuestionListContainer from \"../QuestionList/QuestionListContainer\";\r\nimport EmailsContainer from \"./../Emails/EmailsContainer\";\r\nimport AddEmailContainer from \"./../AddEmail/AddEmailContainer\";\r\nimport \"./CreateQuiz.css\";\r\n\r\nclass CreateQuiz extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.prepare();\r\n  }\r\n  render() {\r\n    let quiz = this.props.quiz;\r\n    let saveQuizClickHandler = this.props.saveQuizClickHandler;\r\n    return (\r\n      <div>\r\n        <NameContainer />\r\n        <div>\r\n          <h1 className=\"h1-questions\"> Questions </h1>\r\n          <QuestionListContainer />\r\n          <AddQuestionContainer />\r\n        </div>\r\n        <div>\r\n          <h1 className=\"h1-questions\"> Emails</h1>\r\n          <EmailsContainer />\r\n          <AddEmailContainer />\r\n        </div>\r\n\r\n        <button\r\n          className=\"save-quiz\"\r\n          onClick={() => saveQuizClickHandler(quiz)}\r\n        >\r\n          {\" \"}\r\n          Save{\" \"}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateQuiz;\r\n","import { combineReducers } from \"redux\";\r\nimport { name } from \"./../Name/NameModule\";\r\nimport { questions } from \"./../QuestionList/QuestionListModule\";\r\nimport { emails } from \"./../Emails/EmailsModule\";\r\n\r\nexport const quiz = combineReducers({\r\n  name,\r\n  questions,\r\n  emails,\r\n});\r\n\r\nexport const clearQuestions = () => {\r\n  return {\r\n    type: \"clearQuestions\",\r\n  };\r\n};\r\n\r\nexport const clearName = () => {\r\n  return {\r\n    type: \"clearName\",\r\n  };\r\n};\r\n\r\nexport const clearEmails = () => {\r\n  return {\r\n    type: \"clearEmails\",\r\n  };\r\n};\r\n","export const questions = (\r\n  state = [\r\n    {\r\n      question: \"\",\r\n      answers: [\"\"],\r\n      correctAnswer: 0,\r\n    },\r\n  ],\r\n  action\r\n) => {\r\n  //console.log(action)\r\n  let type = action.type;\r\n  let value = action.value;\r\n  let i = action.i;\r\n  let j = action.j;\r\n  if (type === \"clearQuestions\") {\r\n    return [\r\n      {\r\n        question: \"\",\r\n        answers: [\"\"],\r\n        correctAnswer: 0,\r\n      },\r\n    ];\r\n  } else if (type === \"addQuestion\") {\r\n    return [\r\n      ...state,\r\n      {\r\n        question: \"\",\r\n        answers: [\"\"],\r\n        correctAnswer: 0,\r\n      },\r\n    ];\r\n  } else if (type === \"updateQuestion\") {\r\n    return [\r\n      ...state.slice(undefined, i),\r\n      {\r\n        ...state[i],\r\n        question: value,\r\n      },\r\n      ...state.slice(i + 1),\r\n    ];\r\n  } else if (type === \"deleteQuestion\") {\r\n    return state.length === 1\r\n      ? [\r\n          {\r\n            question: \"\",\r\n            answers: [\"\"],\r\n            correctAnswer: 0,\r\n          },\r\n        ]\r\n      : [...state.slice(undefined, i), ...state.slice(i + 1)];\r\n  } else if (type === \"addAnswer\") {\r\n    return [\r\n      ...state.slice(undefined, i),\r\n      {\r\n        ...state[i],\r\n        answers: [...state[i].answers, \"\"],\r\n      },\r\n      ...state.slice(i + 1),\r\n    ];\r\n  } else if (type === \"updateAnswer\") {\r\n    return [\r\n      ...state.slice(undefined, i),\r\n      {\r\n        ...state[i],\r\n        answers: [\r\n          ...state[i].answers.slice(undefined, j),\r\n          value,\r\n          ...state[i].answers.slice(j + 1),\r\n        ],\r\n      },\r\n      ...state.slice(i + 1),\r\n    ];\r\n  } else if (type === \"deleteAnswer\") {\r\n    return [\r\n      ...state.slice(undefined, i),\r\n      {\r\n        ...state[i],\r\n        answers:\r\n          state[i].answers.length > 1\r\n            ? [\r\n                ...state[i].answers.slice(undefined, j),\r\n                ...state[i].answers.slice(j + 1),\r\n              ]\r\n            : [\"\"],\r\n        correctAnswer:\r\n          state[i].correctAnswer < j\r\n            ? state[i].correctAnswer\r\n            : state[i].correctAnswer === j\r\n            ? 0\r\n            : state[i].correctAnswer - 1,\r\n      },\r\n      ...state.slice(i + 1),\r\n    ];\r\n  } else if (type === \"correctAnswer\") {\r\n    return [\r\n      ...state.slice(undefined, i),\r\n      {\r\n        ...state[i],\r\n        correctAnswer: j,\r\n      },\r\n      ...state.slice(i + 1),\r\n    ];\r\n  } else if (type === \"fillQuestions\") {\r\n    return action.questions;\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n","export const emails = (state = [], action) => {\r\n  let type = action.type;\r\n  let i = action.i;\r\n  let value = action.value;\r\n  if (type === \"addEmail\") {\r\n    return [...state, \"\"];\r\n  } else if (type === \"updateEmail\") {\r\n    return [...state.slice(undefined, i), value, ...state.slice(i + 1)];\r\n  } else if (type === \"deleteEmail\") {\r\n    return [...state.slice(undefined, i), ...state.slice(i + 1)];\r\n  } else if (type === \"clearEmails\") {\r\n    return [];\r\n  } else if (type === \"fillEmails\") {\r\n    return action.emails;\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport CreateQuiz from \"./CreateQuiz\";\r\nimport { clearQuestions, clearName, clearEmails } from \"./CreateQuizModule\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    quiz: state.quiz,\r\n  };\r\n};\r\n\r\nconst isQuizeValid = (quiz) => {\r\n  if (!quiz.name) return false;\r\n  if (quiz.questions.length === 0) return false;\r\n  let check = quiz.questions.every((question) => {\r\n    if (question.question.length === 0) return false;\r\n    let check = question.answers.every((answer) => {\r\n      if (answer.length === 0) return false;\r\n      return true;\r\n    });\r\n    return check;\r\n  });\r\n  if (!check) return false;\r\n  check = quiz.emails.every((email) => {\r\n    if (!email) return false;\r\n    return true;\r\n  });\r\n  return check;\r\n};\r\n\r\nconst mapDispachToProps = (dispach, props) => {\r\n  return {\r\n    prepare: () => {\r\n      if (!props._id) {\r\n        dispach(clearQuestions());\r\n        dispach(clearName());\r\n        dispach(clearEmails());\r\n      }\r\n    },\r\n    saveQuizClickHandler: (quiz) => {\r\n      if (!isQuizeValid(quiz)) {\r\n        console.log(\"in valid quiz\");\r\n        return;\r\n      }\r\n      if (props._id) {\r\n        quiz._id = props._id;\r\n        let url = \"https://make-your-quiz.herokuapp.com/updateQuiz\";\r\n        fetch(url, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + sessionStorage.token,\r\n          },\r\n          body: JSON.stringify(quiz),\r\n        })\r\n          .then((r) => r.text())\r\n          .then((r) => console.log(r));\r\n        window.location.href = \"/myQuizzes\";\r\n        return;\r\n      }\r\n\r\n      let url = \"https://make-your-quiz.herokuapp.com/addQuiz\";\r\n      fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + sessionStorage.token,\r\n        },\r\n        body: JSON.stringify(quiz),\r\n      })\r\n        .then((r) => r.text())\r\n        .then((r) => console.log(r));\r\n      window.location.href = \"/myQuizzes\";\r\n    },\r\n  };\r\n};\r\n\r\nconst CreateQuizContainer = connect(\r\n  mapStateToProps,\r\n  mapDispachToProps\r\n)(CreateQuiz);\r\nexport default CreateQuizContainer;\r\n","import React from \"react\";\r\nimport CreateQuizContainer from \"./../../CreateQuizFeature/CreateQuiz/CreateQuizContainer\";\r\nimport \"./Quiz.css\";\r\nclass Quiz extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: undefined,\r\n    };\r\n    console.log(props._id);\r\n    let url = \"https://make-your-quiz.herokuapp.com/getQuiz/\" + props._id;\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + sessionStorage.token,\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        props.prepare(r);\r\n        this.setState({\r\n          data: true,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.data) {\r\n      return (\r\n        <div>\r\n          <CreateQuizContainer _id={this.props._id} />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"loading\">\r\n        <div class=\"lds-roller\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import { connect } from \"react-redux\";\r\nimport { updateName } from \"../../CreateQuizFeature/Name/NameModule\";\r\nimport Quiz from \"./Quiz\";\r\nimport { fillEmails, fillQuestions } from \"./QuizModule\";\r\n\r\nconst mapDispachToProps = (dispach) => {\r\n  return {\r\n    prepare: (quiz) => {\r\n      dispach(fillQuestions(quiz.questions));\r\n      dispach(fillEmails(quiz.emails));\r\n      dispach(updateName(quiz.name));\r\n    },\r\n  };\r\n};\r\n\r\nconst QuizContainer = connect(null, mapDispachToProps)(Quiz);\r\nexport default QuizContainer;\r\n","export const fillQuestions = (questions) => {\r\n  return {\r\n    type: \"fillQuestions\",\r\n    questions,\r\n  };\r\n};\r\n\r\nexport const fillEmails = (emails) => {\r\n  return {\r\n    type: \"fillEmails\",\r\n    emails,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport QuizContainer from \"../Quiz/QuizContainer\";\r\nimport \"./Quizzes.css\";\r\nclass Quizzes extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: undefined,\r\n    };\r\n    let url = \"https://make-your-quiz.herokuapp.com/getQuizzes\";\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + sessionStorage.token,\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        this.setState({\r\n          data: r,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.data) {\r\n      return (\r\n        <div className=\"container\">\r\n          <ul className=\"side\">\r\n            {this.state.data.map((quiz) => {\r\n              return (\r\n                <li key={quiz._id}>\r\n                  <Link className=\"side-item \" to={\"/myQuizzes/\" + quiz._id}>\r\n                    {quiz.name}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <Switch>\r\n            {this.state.data.map((quiz) => {\r\n              return (\r\n                <Route key={quiz._id} path={\"/myQuizzes/\" + quiz._id}>\r\n                  <div className=\"main\">\r\n                    <QuizContainer _id={quiz._id} />\r\n                  </div>\r\n                </Route>\r\n              );\r\n            })}\r\n          </Switch>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"loading\">\r\n        <div class=\"lds-roller\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quizzes;\r\n","import \"./Answer.css\";\r\nconst Answer = ({\r\n  children: answer,\r\n  i,\r\n  j,\r\n  isChecked,\r\n  updateTestClickHandler,\r\n}) => {\r\n  return (\r\n    <li className=\"test-answer\">\r\n      <div className=\"test-answer-item\"> {answer} </div>\r\n      <input\r\n        className=\"test-ckeck\"\r\n        type=\"checkbox\"\r\n        readOnly\r\n        checked={isChecked}\r\n        onClick={() => updateTestClickHandler(i, j)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","import { connect } from \"react-redux\";\r\nimport Answer from \"./Answer\";\r\nimport { updateTest } from \"./AnswerModule\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  console.log(state.test);\r\n  return {\r\n    isChecked: state.test[props.i] === props.j,\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = (dispach) => {\r\n  return {\r\n    updateTestClickHandler: (i, j) => {\r\n      dispach(updateTest(i, j));\r\n    },\r\n  };\r\n};\r\n\r\nconst AnswerContainer = connect(mapStateToProps, mapDispachToProps)(Answer);\r\nexport default AnswerContainer;\r\n","export const updateTest = (i, j) => {\r\n  return {\r\n    type: \"updateTest\",\r\n    i,\r\n    j,\r\n  };\r\n};\r\n","import AnswerContainer from \"../Answer/AnswerContainer\";\r\nimport \"./AnswerList.css\";\r\nconst AnswerList = ({ children: answers, i }) => {\r\n  return (\r\n    <ul className=\"test-answer-list\">\r\n      {answers.map((answer, j) => {\r\n        return (\r\n          <AnswerContainer i={i} j={j} key={j}>\r\n            {answer}\r\n          </AnswerContainer>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AnswerList;\r\n","import AnswerList from \"../AnswerList/AnswerList\";\r\nimport \"./Question.css\";\r\nconst Question = ({ children: question, i }) => {\r\n  return (\r\n    <li className=\"test-question\">\r\n      <p className=\"test-question-head\">{question.question}</p>\r\n      <AnswerList i={i}>{question.answers}</AnswerList>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import Question from \"../Question/Question\";\r\nimport \"./QuestionList.css\";\r\nconst QuestionList = ({ children: questions }) => {\r\n  return (\r\n    <ul className=\"test-question-list\">\r\n      {questions.map((question, i) => {\r\n        return (\r\n          <Question key={i} i={i}>\r\n            {question}\r\n          </Question>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default QuestionList;\r\n","export default __webpack_public_path__ + \"static/media/loading.0cbad847.png\";","import React from \"react\";\r\nimport QuestionList from \"../QuestionList/QuestionList\";\r\nimport \"./Test.css\";\r\nimport loading from './loading.png'\r\n\r\nclass Test extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: undefined,\r\n      degree: 0,\r\n    };\r\n    let url = \"https://make-your-quiz.herokuapp.com/tests/\" + props._id;\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + sessionStorage.token,\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        props.prepare(r.questions.length);\r\n        this.setState({\r\n          data: r,\r\n        });\r\n      });\r\n  }\r\n  getDegree = () => {\r\n    this.setState({\r\n      degree: <div className='load-img'> <img src={loading} alt='....loading'/> </div> \r\n    });\r\n    let url =\r\n      \"https://make-your-quiz.herokuapp.com/getDegree/\" + this.props._id;\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + sessionStorage.token,\r\n      },\r\n      body: JSON.stringify(this.props.answers),\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        console.log(r);\r\n        this.setState({\r\n          degree: r.degree + ' %',\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    let quiz = this.state.data;\r\n    if (quiz) {\r\n      return (\r\n        <div>\r\n          <div className=\"test-head\">\r\n            <h1 className=\"test-head-item\"> Quiz name : {quiz.name}</h1>\r\n            <div className=\"test-head-item load-img\">\r\n              Your Degree is : {this.state.degree}\r\n            </div>\r\n          </div>\r\n          <QuestionList>{quiz.questions}</QuestionList>\r\n          <button className=\"get-degree\" onClick={this.getDegree}>\r\n            {\" \"}\r\n            Get degree{\" \"}\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"loading\">\r\n          <div class=\"lds-roller\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import { connect } from \"react-redux\";\r\nimport Test from \"./Test\";\r\nimport { fillTest } from \"./TestModule\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    answers: state.test,\r\n  };\r\n};\r\n\r\nconst mapDispachToProps = (dispach) => {\r\n  return {\r\n    prepare: (cnt) => {\r\n      dispach(fillTest(cnt));\r\n    },\r\n  };\r\n};\r\n\r\nconst TestContainer = connect(mapStateToProps, mapDispachToProps)(Test);\r\nexport default TestContainer;\r\n","export const fillTest = (cnt) => {\r\n  return {\r\n    type: \"fillTest\",\r\n    cnt,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport TestContainer from \"./../Test/TestContainer\";\r\nimport \"../../MyQuizzesFeature/Quizzes/Quizzes.css\";\r\nclass Tests extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: undefined,\r\n    };\r\n    let url = \"https://make-your-quiz.herokuapp.com/tests\";\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + sessionStorage.token,\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        this.setState({\r\n          data: r,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    let data = this.state.data;\r\n    if (data) {\r\n      return (\r\n        <div className=\"container\">\r\n          <ul className=\"side\">\r\n            {data.map((quiz) => {\r\n              return (\r\n                <li key={quiz._id}>\r\n                  {\" \"}\r\n                  <Link className=\"side-item\" to={\"/tests/\" + quiz._id}>\r\n                    {quiz.name}\r\n                  </Link>{\" \"}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <Switch>\r\n            {data.map((quiz) => {\r\n              return (\r\n                <Route key={quiz._id} path={\"/tests/\" + quiz._id}>\r\n                  <div className=\"main\">\r\n                    <TestContainer _id={quiz._id} />\r\n                  </div>\r\n                </Route>\r\n              );\r\n            })}\r\n          </Switch>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"loading\">\r\n          <div class=\"lds-roller\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Tests;\r\n","export default __webpack_public_path__ + \"static/media/logo2.187a8c88.jpg\";","import React from \"react\";\r\nimport CreateQuizContainer from \"./../CreateQuizFeature/CreateQuiz/CreateQuizContainer\";\r\nimport { GoogleLogin, GoogleLogout } from \"react-google-login\";\r\nimport { Link, Switch, Route, matchPath } from \"react-router-dom\";\r\nimport Quizzes from \"./../MyQuizzesFeature/Quizzes/Quizzes\";\r\nimport Tests from \"../TestsFeature/Tests/Tests\";\r\nimport \"./App.css\";\r\nimport logo from \"./logo2.jpg\";\r\nimport Email from \"./../CreateQuizFeature/Email/Email\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLogedIn: false,\r\n      active:\r\n        window.location.href ===\r\n        \"http://localhost:3000/createQuiz\"\r\n          ? 1\r\n          : window.location.href === \"http://localhost:3000/myQuizzes\"\r\n          ? 2\r\n          : window.location.href === \"http://localhost:3000/tests\"\r\n          ? 3\r\n          : 0,\r\n    };\r\n  }\r\n\r\n  success = (response) => {\r\n    sessionStorage.token = response.tokenId;\r\n    sessionStorage.name = response.profileObj.givenName;\r\n    this.setState({ isLogedIn: true });\r\n  };\r\n  failure = () => {\r\n    sessionStorage.token = \"\";\r\n    this.setState({ isLogedIn: false });\r\n  };\r\n\r\n  active = (id) => {\r\n    sessionStorage.active = id;\r\n    this.setState({\r\n      active: id,\r\n    });\r\n  };\r\n  render() {\r\n    let active = this.state.active;\r\n    if (this.state.isLogedIn) {\r\n      return (\r\n        <div>\r\n          <ul className=\"nav\">\r\n            <li>\r\n              <img className=\"nav-item logo\" src={logo} alt=\"logo\" />\r\n            </li>\r\n            <li>\r\n              <Link\r\n                className={\"nav-item\" + (active === 0 ? \" active\" : \"\")}\r\n                to=\"/\"\r\n                onClick={() => this.active(0)}\r\n              >\r\n                {\" \"}\r\n                Home{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                className={\"nav-item\" + (active === 1 ? \" active\" : \"\")}\r\n                to=\"/createQuiz\"\r\n                onClick={() => this.active(1)}\r\n              >\r\n                {\" \"}\r\n                Create Quiz{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                className={\"nav-item\" + (active === 2 ? \" active\" : \"\")}\r\n                to=\"/myQuizzes\"\r\n                onClick={() => this.active(2)}\r\n              >\r\n                {\" \"}\r\n                My Quizzes{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link\r\n                className={\"nav-item\" + (active === 3 ? \" active\" : \"\")}\r\n                to=\"/tests\"\r\n                onClick={() => this.active(3)}\r\n              >\r\n                {\" \"}\r\n                My Tests{\" \"}\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <span className=\"user-icon nav-item\">{sessionStorage.name}</span>\r\n            </li>\r\n            <li>\r\n              <GoogleLogout\r\n                className=\"nav-item\"\r\n                clientId=\"1082313788044-ru8kfvsc9j6okm8itc5al91l4qf9kond.apps.googleusercontent.com\"\r\n                buttonText=\"Logout\"\r\n                onLogoutSuccess={this.failure}\r\n              ></GoogleLogout>\r\n            </li>\r\n          </ul>\r\n\r\n          <Switch>\r\n            <Route path=\"/createQuiz\">\r\n              <CreateQuizContainer />\r\n            </Route>\r\n            <Route path=\"/myQuizzes\">\r\n              <Quizzes />\r\n            </Route>\r\n            <Route path=\"/tests\">\r\n              <Tests />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <div className=\"home\">\r\n                <p>\r\n                  * you can with this app to create multiple choice quizzes, to\r\n                  do this click on create a quiz in the navbar.\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  * you can also add people by their emails that can try these\r\n                  quizzes and get results from them.\r\n                </p>\r\n                <br />\r\n                <p>\r\n                  * if anyone adds you to his quiz you can try it, ``and you\r\n                  will find it in the tests in the navbar.\r\n                </p>\r\n                <br />\r\n                <div>\r\n                  <h2> Creator: ahmed samir </h2>\r\n                  <h2> Email: asamir2211997@gmail.com </h2>\r\n                </div>\r\n              </div>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"back\">\r\n        <div className=\"login\">\r\n          <p>long in with your google account</p>\r\n          <GoogleLogin\r\n            clientId=\"1082313788044-ru8kfvsc9j6okm8itc5al91l4qf9kond.apps.googleusercontent.com\"\r\n            buttonText=\"Login\"\r\n            onSuccess={this.success}\r\n            cookiePolicy={\"single_host_origin\"}\r\n            isSignedIn={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { quiz } from \"./../CreateQuizFeature/CreateQuiz/CreateQuizModule\";\r\nimport { test } from \"./../TestsFeature/QuestionList/QuestionListModule\";\r\n\r\nexport const app = combineReducers({\r\n  quiz,\r\n  test,\r\n});\r\n","export const test = (state = [], action) => {\r\n  if (action.type === \"updateTest\") {\r\n    return [\r\n      ...state.slice(undefined, action.i),\r\n      action.j,\r\n      ...state.slice(action.i + 1),\r\n    ];\r\n  } else if (action.type === \"fillTest\") {\r\n    let temp = [];\r\n    let cnt = action.cnt;\r\n    while (cnt--) temp.push(-1);\r\n    return temp;\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n","import ReactDOM from 'react-dom';\nimport App from './Components/App/App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { app } from './Components/App/AppModule';\n\n\nconst store = createStore(app);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}